{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ReactProject/GuestListExpress/client/src/components/App.js\";\nimport React from 'react';\nimport './app.css';\nimport SearchBar from './SearchBar';\nimport TableList from './TableList';\nimport GuestView from './GuestView';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bestGuest: {},\n      isFetchingGuests: true,\n      isFetchingTables: true,\n      guestsToDisplay: [],\n      myGuests: [],\n      selectectedGuest: null,\n      tablesToDisplay: [],\n      tables: []\n    };\n\n    this.onWordEntered = word => {\n      const wordLower = word.toLowerCase();\n      this.setState({\n        guestsToDisplay: [],\n        tablesToDisplay: []\n      });\n\n      if (word === \"\") {\n        this.setState({\n          guestsToDisplay: this.state.myGuests,\n          tablesToDisplay: this.state.tables\n        });\n      } else {\n        this.setState(state => {\n          const guestsToDisplay = state.myGuests.map(g => {\n            if (g.CODE.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            if (g.Names.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            if (g.Table.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            return {};\n          });\n          const tablesToDisplay = this.state.tables.map(table => {\n            for (let guest of guestsToDisplay) {\n              if (guest.Table === table.Name) {\n                return table;\n              }\n            }\n\n            return null;\n          });\n          return {\n            guestsToDisplay,\n            tablesToDisplay\n          };\n        });\n      }\n    };\n\n    this.onGuestSelected = guest => {\n      this.setState({\n        selectectedGuest: guest\n      });\n    };\n\n    this.onArrivalCheck = guest => {\n      this.setState(state => {\n        const myGuests = state.myGuests.map(g => {\n          if (g.CODE === guest.CODE) {\n            const currTime = new Date().toLocaleTimeString();\n            g.Present = currTime;\n            return g;\n          } else {\n            return g;\n          }\n        });\n        const bestGuest = this.state.myGuests.reduce((pGuest, cGuest) => Date.parse(\"07/27/2019 \" + pGuest.present) < Date.parse(\"07/27/2019 \" + cGuest.present) ? pGuest : cGuest);\n        axios.post('api/postGuests', this.state.myGuests).then(response => console.log(response)).catch(error => console.log(error));\n        return {\n          myGuests,\n          bestGuest\n        };\n      });\n    };\n\n    this.getGuests = async () => {\n      console.log(\"getting guests ...\");\n      this.setState({\n        isFetchingGuests: true\n      });\n      const response = await axios('api/guest_list');\n      if (response.status !== 200) throw Error(response.message);\n      const selectectedGuest = !this.state.selectectedGuest ? response.data[1] : this.state.selectectedGuest;\n      this.setState({\n        guestsToDisplay: response.data,\n        myGuests: response.data,\n        selectectedGuest,\n        isFetchingGuests: false\n      });\n      return response.data;\n    };\n\n    this.getTables = async () => {\n      console.log(\"getting tables ...\");\n      this.setState({\n        isFetchingTables: true\n      });\n      const response = await axios('api/tables');\n      if (response.status !== 200) throw Error(response.message);\n      this.setState({\n        tablesToDisplay: response.data,\n        tables: response.data,\n        isFetchingTables: false\n      });\n      return response.data;\n    };\n  }\n\n  componentDidMount() {\n    this.getGuests();\n    this.getTables();\n    this.timer = setInterval(() => {\n      this.getGuests();\n      this.getTables();\n    }, 30000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  render() {\n    const _this$state = this.state,\n          bestGuest = _this$state.bestGuest,\n          isFetchingTables = _this$state.isFetchingTables,\n          isFetchingGuests = _this$state.isFetchingGuests;\n    const bestGuestText = Object.keys(bestGuest).length == 0 ? \"La soirée n'a pas encore commencé\" : \"Le/la Meilleur invit\\xE9/invit\\xE9e est \".concat(bestGuest.Names, \" arriv\\xE9 \\xE0 \").concat(bestGuest.Present);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onWordEntered: this.onWordEntered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, bestGuestText), React.createElement(\"div\", {\n      className: \"ui tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, !isFetchingGuests && !isFetchingTables ? React.createElement(TableList, {\n      guests: this.state.guestsToDisplay,\n      tables: this.state.tablesToDisplay,\n      onGuestSelected: this.onGuestSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"ui active inverted dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui large text loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"T\\xE9l\\xE9chargement des invit\\xE9s\"))), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, !isFetchingGuests && !isFetchingTables ? React.createElement(GuestView, {\n      guest: this.state.selectectedGuest,\n      onArrivalCheck: this.onArrivalCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ReactProject/GuestListExpress/client/src/components/App.js"],"names":["React","SearchBar","TableList","GuestView","axios","App","Component","state","bestGuest","isFetchingGuests","isFetchingTables","guestsToDisplay","myGuests","selectectedGuest","tablesToDisplay","tables","onWordEntered","word","wordLower","toLowerCase","setState","map","g","CODE","indexOf","Names","Table","table","guest","Name","onGuestSelected","onArrivalCheck","currTime","Date","toLocaleTimeString","Present","reduce","pGuest","cGuest","parse","present","post","then","response","console","log","catch","error","getGuests","status","Error","message","data","getTables","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","render","bestGuestText","Object","keys","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './app.css';\nimport SearchBar from './SearchBar';\nimport TableList from './TableList';\nimport GuestView from './GuestView';\nimport axios from 'axios'\n\nclass App extends React.Component {\n    \n    state = {bestGuest: {}, isFetchingGuests: true, isFetchingTables: true, guestsToDisplay: [], myGuests: [], selectectedGuest: null, tablesToDisplay: [], tables: []};\n\n    onWordEntered = (word) => {\n        const wordLower = word.toLowerCase();\n        this.setState({guestsToDisplay: [], tablesToDisplay: []});\n        if(word === \"\") {\n            this.setState({guestsToDisplay: this.state.myGuests, tablesToDisplay: this.state.tables});\n        } else {\n            this.setState(state => {\n                const guestsToDisplay = state.myGuests.map(g => {\n                    if(g.CODE.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    if(g.Names.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    if(g.Table.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    return {};\n                });\n\n                const tablesToDisplay = this.state.tables.map( table => {\n                    for(let guest of guestsToDisplay) {\n                        if(guest.Table === table.Name) {\n                            return table;\n                        }\n                    }\n                    return null;\n                });\n                return {\n                    guestsToDisplay,\n                    tablesToDisplay\n                };\n            });\n        }\n    }\n\n    componentDidMount() {\n       this.getGuests();\n       this.getTables();\n       this.timer = setInterval(() => {\n           this.getGuests();\n           this.getTables();\n       }, 30000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n\n    onGuestSelected = (guest) => {\n        this.setState({selectectedGuest: guest});  \n    }\n\n    onArrivalCheck = (guest) => {\n        this.setState(state => {\n            const myGuests = state.myGuests.map(g => {\n                if(g.CODE === guest.CODE){\n                    const currTime = new Date().toLocaleTimeString();\n                    g.Present = currTime;\n                    return g;\n                }else {\n                    return g;\n                }\n            });\n\n            const bestGuest = this.state.myGuests.reduce((pGuest, cGuest) => \n                Date.parse(\"07/27/2019 \" + pGuest.present) < Date.parse(\"07/27/2019 \" + cGuest.present) ? pGuest : cGuest);\n\n            axios.post('api/postGuests', this.state.myGuests)\n            .then(response => console.log(response))\n            .catch(error => console.log(error));\n            \n            return {\n                myGuests,\n                bestGuest,\n            };\n        });\n    }\n\n    getGuests = async() => {\n        console.log(\"getting guests ...\");\n        \n        this.setState({isFetchingGuests: true});\n        const response = await axios('api/guest_list');\n        if(response.status !== 200) throw Error(response.message);\n        const selectectedGuest = !this.state.selectectedGuest ? response.data[1] : this.state.selectectedGuest;\n\n        this.setState({\n            guestsToDisplay: response.data,\n            myGuests: response.data,\n            selectectedGuest,\n            isFetchingGuests: false\n        });\n        return response.data;\n    }\n\n    getTables = async() => {\n        console.log(\"getting tables ...\")\n        this.setState({isFetchingTables: true});\n        const response = await axios('api/tables');\n\n        if(response.status !== 200) throw Error(response.message);\n        this.setState({\n            tablesToDisplay: response.data, \n            tables: response.data,\n            isFetchingTables: false\n        });\n        return response.data;\n    }\n\n    render() {\n        const { bestGuest, isFetchingTables, isFetchingGuests } =  this.state ;\n\n        const bestGuestText = Object.keys(bestGuest).length == 0 ? \"La soirée n'a pas encore commencé\" \n        : `Le/la Meilleur invité/invitée est ${bestGuest.Names} arrivé à ${bestGuest.Present}`;\n        return (\n            <div>\n                    <div>\n                        <SearchBar onWordEntered={this.onWordEntered} />\n                    </div>\n                    <div className=\"ui segment\" >\n                        {bestGuestText}\n                    </div>\n                    <div className=\"ui tables\" >\n                    {!isFetchingGuests && !isFetchingTables ? (\n                        <TableList \n                            guests={this.state.guestsToDisplay} \n                            tables={this.state.tablesToDisplay} \n                            onGuestSelected={this.onGuestSelected}\n                        />\n                        ) : (\n                            <div className=\"ui active inverted dimmer\">\n                                <div className=\"ui large text loader\">Téléchargement des invités</div>\n                            </div>\n                     )}\n                    </div>\n                    <div className=\"ui segment\">\n                    {!isFetchingGuests && !isFetchingTables ? (\n                        <GuestView \n                            guest={this.state.selectectedGuest} \n                            onArrivalCheck={this.onArrivalCheck} \n                        />\n                        ) : <div></div> }\n                    </div> \n                    \n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}