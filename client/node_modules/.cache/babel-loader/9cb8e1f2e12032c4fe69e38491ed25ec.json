{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ReactProject/GuestListExpress/client/src/components/App.js\";\nimport React from 'react';\nimport './app.css';\nimport SearchBar from './SearchBar';\nimport TableList from './TableList';\nimport GuestView from './GuestView';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bestGuest: {},\n      isFetchingGuests: true,\n      isFetchingTables: true,\n      guestsToDisplay: [],\n      myGuests: [],\n      selectectedGuest: null,\n      tablesToDisplay: [],\n      tables: []\n    };\n\n    this.onWordEntered = word => {\n      const wordLower = word.toLowerCase();\n      this.setState({\n        guestsToDisplay: [],\n        tablesToDisplay: []\n      });\n\n      if (word === \"\") {\n        this.setState({\n          guestsToDisplay: this.state.myGuests,\n          tablesToDisplay: this.state.tables\n        });\n      } else {\n        this.setState(state => {\n          const guestsToDisplay = state.myGuests.map(g => {\n            if (g.CODE.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            if (g.Names.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            if (g.Table.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            return {};\n          });\n          const tablesToDisplay = this.state.tables.map(table => {\n            for (let guest of guestsToDisplay) {\n              if (guest.Table === table.Name) {\n                return table;\n              }\n            }\n\n            return null;\n          });\n          return {\n            guestsToDisplay,\n            tablesToDisplay\n          };\n        });\n      }\n    };\n\n    this.onGuestSelected = guest => {\n      this.setState({\n        selectectedGuest: guest\n      });\n    };\n\n    this.onArrivalCheck = guest => {\n      this.setState(state => {\n        const myGuests = state.myGuests.map(g => {\n          if (g.CODE === guest.CODE) {\n            const currTime = new Date().toLocaleTimeString();\n            g.Present = currTime;\n            return g;\n          } else {\n            return g;\n          }\n        });\n        axios.post('api/postGuests', this.state.myGuests).then(response => console.log(response)).catch(error => console.log(error));\n        return {\n          myGuests\n        };\n      });\n    };\n\n    this.getGuests = async () => {\n      this.setState({\n        isFetchingGuests: true\n      });\n      const response = await axios('api/guest_list');\n      if (response.status !== 200) throw Error(response.message);\n      const selectectedGuest = !this.state.selectectedGuest ? response.data[1] : this.state.selectectedGuest;\n      const myGuests = response.data;\n      const guestsToDisplay = this.state.guestsToDisplay.length === 0 ? response.data : this.state.guestsToDisplay;\n      const bestGuest = myGuests.reduce((pGuest, cGuest) => Date.parse(\"07/27/2019 \" + pGuest.Present) < Date.parse(\"07/27/2019 \" + cGuest.Present) ? pGuest : cGuest);\n      this.setState({\n        guestsToDisplay,\n        myGuests,\n        selectectedGuest,\n        bestGuest,\n        isFetchingGuests: false\n      });\n      return response.data;\n    };\n\n    this.getTables = async () => {\n      this.setState({\n        isFetchingTables: true\n      });\n      const response = await axios('api/tables');\n      const tablesToDisplay = this.state.tablesToDisplay.length === 0 ? response.data : this.state.tablesToDisplay;\n      if (response.status !== 200) throw Error(response.message);\n      this.setState({\n        tablesToDisplay,\n        tables: response.data,\n        isFetchingTables: false\n      });\n      return response.data;\n    };\n  }\n\n  componentDidMount() {\n    this.getGuests();\n    this.getTables();\n    this.timerGuests = setInterval(() => {\n      this.getGuests();\n    }, 30000);\n    this.timerTables = setInterval(() => {\n      this.getTables();\n    }, 45000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerGuests);\n    this.timerGuests = null;\n    clearInterval(this.timerTables);\n    this.timerTables = null;\n  }\n\n  render() {\n    const _this$state = this.state,\n          bestGuest = _this$state.bestGuest,\n          isFetchingTables = _this$state.isFetchingTables,\n          isFetchingGuests = _this$state.isFetchingGuests;\n    const defaultTime = \"11:59:59 PM\";\n    const bestGuestText = Object.keys(bestGuest).length === 0 || bestGuest.Present === defaultTime ? \"La soirée n'a pas encore commencé\" : \"Meilleur invit\\xE9: \".concat(bestGuest.Names, \" arriv\\xE9 \\xE0 \").concat(bestGuest.Present);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onWordEntered: this.onWordEntered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui container bestGuest\",\n      style: {\n        width: \"50%\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui blue segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, bestGuestText))), React.createElement(\"div\", {\n      className: \"ui tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, !isFetchingGuests && !isFetchingTables ? React.createElement(TableList, {\n      guests: this.state.guestsToDisplay,\n      tables: this.state.tablesToDisplay,\n      onGuestSelected: this.onGuestSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"ui active inverted dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui large text loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"T\\xE9l\\xE9chargement des invit\\xE9s\"))), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, !isFetchingGuests && !isFetchingTables ? React.createElement(GuestView, {\n      guest: this.state.selectectedGuest,\n      onArrivalCheck: this.onArrivalCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ReactProject/GuestListExpress/client/src/components/App.js"],"names":["React","SearchBar","TableList","GuestView","axios","App","Component","state","bestGuest","isFetchingGuests","isFetchingTables","guestsToDisplay","myGuests","selectectedGuest","tablesToDisplay","tables","onWordEntered","word","wordLower","toLowerCase","setState","map","g","CODE","indexOf","Names","Table","table","guest","Name","onGuestSelected","onArrivalCheck","currTime","Date","toLocaleTimeString","Present","post","then","response","console","log","catch","error","getGuests","status","Error","message","data","length","reduce","pGuest","cGuest","parse","getTables","componentDidMount","timerGuests","setInterval","timerTables","componentWillUnmount","clearInterval","render","defaultTime","bestGuestText","Object","keys","width","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './app.css';\nimport SearchBar from './SearchBar';\nimport TableList from './TableList';\nimport GuestView from './GuestView';\nimport axios from 'axios'\n\nclass App extends React.Component {\n    \n    state = {bestGuest: {}, isFetchingGuests: true, isFetchingTables: true, guestsToDisplay: [], myGuests: [], selectectedGuest: null, tablesToDisplay: [], tables: []};\n\n    onWordEntered = (word) => {\n        const wordLower = word.toLowerCase();\n        this.setState({guestsToDisplay: [], tablesToDisplay: []});\n        if(word === \"\") {\n            this.setState({guestsToDisplay: this.state.myGuests, tablesToDisplay: this.state.tables});\n        } else {\n            this.setState(state => {\n                const guestsToDisplay = state.myGuests.map(g => {\n                    if(g.CODE.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    if(g.Names.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    if(g.Table.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    return {};\n                });\n\n                const tablesToDisplay = this.state.tables.map( table => {\n                    for(let guest of guestsToDisplay) {\n                        if(guest.Table === table.Name) {\n                            return table;\n                        }\n                    }\n                    return null;\n                });\n                return {\n                    guestsToDisplay,\n                    tablesToDisplay\n                };\n            });\n        }\n    }\n\n    componentDidMount() {\n       this.getGuests();\n       this.getTables();\n       this.timerGuests = setInterval(() => {\n           this.getGuests();\n       }, 30000);\n       this.timerTables = setInterval(() => {\n            this.getTables();\n        }, 45000);\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerGuests);\n        this.timerGuests = null;\n        clearInterval(this.timerTables);\n        this.timerTables = null;\n    }\n\n    onGuestSelected = (guest) => {\n        this.setState({selectectedGuest: guest});  \n    }\n\n    onArrivalCheck = (guest) => {\n        this.setState(state => {\n            const myGuests = state.myGuests.map(g => {\n                if(g.CODE === guest.CODE){\n                    const currTime = new Date().toLocaleTimeString();\n                    g.Present = currTime;\n                    return g;\n                }else {\n                    return g;\n                }\n            });\n\n            axios.post('api/postGuests', this.state.myGuests)\n            .then(response => console.log(response))\n            .catch(error => console.log(error));\n            \n            return {\n                myGuests,\n            };\n        });\n    }\n\n    getGuests = async() => {\n        \n        this.setState({isFetchingGuests: true});\n        const response = await axios('api/guest_list');\n        if(response.status !== 200) throw Error(response.message);\n        const selectectedGuest = !this.state.selectectedGuest ? response.data[1] : this.state.selectectedGuest;\n        const myGuests = response.data;\n\n        const guestsToDisplay = this.state.guestsToDisplay.length === 0 ? response.data : this.state.guestsToDisplay;\n\n        const bestGuest = myGuests.reduce((pGuest, cGuest) => \n        Date.parse(\"07/27/2019 \" + pGuest.Present) < Date.parse(\"07/27/2019 \" + cGuest.Present) ? pGuest : cGuest);\n\n        this.setState({\n            guestsToDisplay,\n            myGuests,\n            selectectedGuest,\n            bestGuest,\n            isFetchingGuests: false\n        });\n        return response.data;\n    }\n\n    getTables = async() => {\n        this.setState({isFetchingTables: true});\n        const response = await axios('api/tables');\n\n        const tablesToDisplay = this.state.tablesToDisplay.length === 0 ? response.data : this.state.tablesToDisplay;\n\n        if(response.status !== 200) throw Error(response.message);\n        this.setState({\n            tablesToDisplay, \n            tables: response.data,\n            isFetchingTables: false\n        });\n        return response.data;\n    }\n\n    render() {\n        const { bestGuest, isFetchingTables, isFetchingGuests } =  this.state ;\n        const defaultTime = \"11:59:59 PM\";\n        const bestGuestText = Object.keys(bestGuest).length === 0 || bestGuest.Present === defaultTime ? \"La soirée n'a pas encore commencé\" \n        : `Meilleur invité: ${bestGuest.Names} arrivé à ${bestGuest.Present}`;\n        return (\n            <div>\n                    <div>\n                        <SearchBar onWordEntered={this.onWordEntered} />\n                    </div>\n                    <div className=\"ui container bestGuest\" style={{width: \"50%\", textAlign: \"center\"}}>\n                        <div className=\"ui blue segment\" >\n                           <h5>{bestGuestText}</h5> \n                        </div>\n                    </div>\n                    <div className=\"ui tables\" >\n                    {!isFetchingGuests && !isFetchingTables ? (\n                        <TableList \n                            guests={this.state.guestsToDisplay} \n                            tables={this.state.tablesToDisplay} \n                            onGuestSelected={this.onGuestSelected}\n                        />\n                        ) : (\n                            <div className=\"ui active inverted dimmer\">\n                                <div className=\"ui large text loader\">Téléchargement des invités</div>\n                            </div>\n                     )}\n                    </div>\n                    <div className=\"ui segment\">\n                    {!isFetchingGuests && !isFetchingTables ? (\n                        <GuestView \n                            guest={this.state.selectectedGuest} \n                            onArrivalCheck={this.onArrivalCheck} \n                        />\n                        ) : <div></div> }\n                    </div> \n                    \n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}