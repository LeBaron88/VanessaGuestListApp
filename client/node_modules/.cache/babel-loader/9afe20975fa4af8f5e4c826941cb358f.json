{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ReactProject/GuestListExpress/client/src/components/App.js\";\nimport React from 'react';\nimport './app.css';\nimport SearchBar from './SearchBar';\nimport TableList from './TableList';\nimport GuestView from './GuestView'; //import Guests from '../data/guest_list.json'\n//import Tables from '../data/tables.json'\n\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFetchingGuests: true,\n      isFetchingTables: true,\n      guestsToDisplay: [],\n      myGuests: [],\n      selectectedGuest: null,\n      tablesToDisplay: [],\n      tables: []\n    };\n\n    this.onWordEntered = word => {\n      const wordLower = word.toLowerCase();\n      this.setState({\n        guestsToDisplay: [],\n        tablesToDisplay: []\n      });\n\n      if (word === \"\") {\n        this.setState({\n          guestsToDisplay: this.state.myGuests,\n          tablesToDisplay: this.state.tables\n        });\n      } else {\n        this.setState(state => {\n          const guestsToDisplay = state.myGuests.map(g => {\n            if (g.CODE.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            if (g.Names.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            if (g.Table.toLowerCase().indexOf(wordLower) > -1) {\n              return g;\n            }\n\n            return {};\n          });\n          const tablesToDisplay = this.state.tables.map(table => {\n            for (let guest of guestsToDisplay) {\n              if (guest.Table === table.Name) {\n                return table;\n              }\n            }\n\n            return null;\n          });\n          return {\n            guestsToDisplay,\n            tablesToDisplay\n          };\n        });\n      }\n    };\n\n    this.onGuestSelected = guest => {\n      this.setState({\n        selectectedGuest: guest\n      });\n    };\n\n    this.onArrivalCheck = guest => {\n      this.setState(state => {\n        const myGuests = state.myGuests.map(g => {\n          if (g.CODE === guest.CODE) {\n            const currTime = new Date().toLocaleTimeString();\n            g.Present = currTime;\n            return g;\n          } else {\n            return g;\n          }\n        });\n        axios.post('api/postGuests', this.state.myGuests).then(response => console.log(response)).catch(error => console.log(error));\n        return {\n          myGuests\n        };\n      });\n    };\n\n    this.getGuests = async () => {\n      this.setState({\n        isFetching: true\n      });\n      const response = await axios('api/guest_list');\n      if (response.status !== 200) throw Error(response.message);\n      this.setState({\n        guestsToDisplay: response.data,\n        myGuests: response.data,\n        selectectedGuest: response.data[1],\n        isFetchingGuests: false\n      });\n      return response.data;\n    };\n\n    this.getTables = async () => {\n      this.setState({\n        isFetching: true\n      });\n      const response = await axios('api/tables');\n      if (response.status !== 200) throw Error(response.message);\n      this.setState({\n        tablesToDisplay: response.data,\n        tables: response.data,\n        isFetchingTables: false\n      });\n      return response.data;\n    };\n  }\n\n  componentDidMount() {\n    this.getGuests();\n    this.getTables();\n    this.timer = setInterval(() => this.getGuests(), 60000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  render() {\n    const isFTables = this.state.isFetchingTables;\n    const isFGuests = this.state.isFetchingGuests;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onWordEntered: this.onWordEntered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui segment tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, !isFGuests && !isFTables ? React.createElement(TableList, {\n      guests: this.state.guestsToDisplay,\n      tables: this.state.tablesToDisplay,\n      onGuestSelected: this.onGuestSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"ui active inverted dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui large text loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"T\\xE9l\\xE9chargement des invit\\xE9s\"))), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, !isFGuests && !isFTables ? React.createElement(GuestView, {\n      guest: this.state.selectectedGuest,\n      onArrivalCheck: this.onArrivalCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ReactProject/GuestListExpress/client/src/components/App.js"],"names":["React","SearchBar","TableList","GuestView","axios","App","Component","state","isFetchingGuests","isFetchingTables","guestsToDisplay","myGuests","selectectedGuest","tablesToDisplay","tables","onWordEntered","word","wordLower","toLowerCase","setState","map","g","CODE","indexOf","Names","Table","table","guest","Name","onGuestSelected","onArrivalCheck","currTime","Date","toLocaleTimeString","Present","post","then","response","console","log","catch","error","getGuests","isFetching","status","Error","message","data","getTables","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","render","isFTables","isFGuests"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AAACC,MAAAA,gBAAgB,EAAE,IAAnB;AAAyBC,MAAAA,gBAAgB,EAAE,IAA3C;AAAiDC,MAAAA,eAAe,EAAE,EAAlE;AAAsEC,MAAAA,QAAQ,EAAE,EAAhF;AAAoFC,MAAAA,gBAAgB,EAAE,IAAtG;AAA4GC,MAAAA,eAAe,EAAE,EAA7H;AAAiIC,MAAAA,MAAM,EAAE;AAAzI,KAFsB;;AAAA,SAI9BC,aAJ8B,GAIbC,IAAD,IAAU;AAEtB,YAAMC,SAAS,GAAGD,IAAI,CAACE,WAAL,EAAlB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,eAAe,EAAE,EAAlB;AAAsBG,QAAAA,eAAe,EAAE;AAAvC,OAAd;;AACA,UAAGG,IAAI,KAAK,EAAZ,EAAgB;AACZ,aAAKG,QAAL,CAAc;AAACT,UAAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,QAA7B;AAAuCE,UAAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO;AAAnE,SAAd;AACH,OAFD,MAEO;AACH,aAAKK,QAAL,CAAcZ,KAAK,IAAI;AACnB,gBAAMG,eAAe,GAAGH,KAAK,CAACI,QAAN,CAAeS,GAAf,CAAmBC,CAAC,IAAI;AAC5C,gBAAGA,CAAC,CAACC,IAAF,CAAOJ,WAAP,GAAqBK,OAArB,CAA6BN,SAA7B,IAA0C,CAAC,CAA9C,EAAiD;AAC7C,qBAAOI,CAAP;AACH;;AACD,gBAAGA,CAAC,CAACG,KAAF,CAAQN,WAAR,GAAsBK,OAAtB,CAA8BN,SAA9B,IAA2C,CAAC,CAA/C,EAAkD;AAC9C,qBAAOI,CAAP;AACH;;AACD,gBAAGA,CAAC,CAACI,KAAF,CAAQP,WAAR,GAAsBK,OAAtB,CAA8BN,SAA9B,IAA2C,CAAC,CAA/C,EAAkD;AAC9C,qBAAOI,CAAP;AACH;;AACD,mBAAO,EAAP;AACH,WAXuB,CAAxB;AAaA,gBAAMR,eAAe,GAAG,KAAKN,KAAL,CAAWO,MAAX,CAAkBM,GAAlB,CAAuBM,KAAK,IAAI;AACpD,iBAAI,IAAIC,KAAR,IAAiBjB,eAAjB,EAAkC;AAC9B,kBAAGiB,KAAK,CAACF,KAAN,KAAgBC,KAAK,CAACE,IAAzB,EAA+B;AAC3B,uBAAOF,KAAP;AACH;AACJ;;AACD,mBAAO,IAAP;AACH,WAPuB,CAAxB;AAQA,iBAAO;AACHhB,YAAAA,eADG;AAEHG,YAAAA;AAFG,WAAP;AAIH,SA1BD;AA2BH;AACJ,KAvC6B;;AAAA,SAsD9BgB,eAtD8B,GAsDXF,KAAD,IAAW;AACzB,WAAKR,QAAL,CAAc;AAACP,QAAAA,gBAAgB,EAAEe;AAAnB,OAAd;AACH,KAxD6B;;AAAA,SA0D9BG,cA1D8B,GA0DZH,KAAD,IAAW;AACxB,WAAKR,QAAL,CAAcZ,KAAK,IAAI;AACnB,cAAMI,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAeS,GAAf,CAAmBC,CAAC,IAAI;AACrC,cAAGA,CAAC,CAACC,IAAF,KAAWK,KAAK,CAACL,IAApB,EAAyB;AACrB,kBAAMS,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAjB;AACAZ,YAAAA,CAAC,CAACa,OAAF,GAAYH,QAAZ;AACA,mBAAOV,CAAP;AACH,WAJD,MAIM;AACF,mBAAOA,CAAP;AACH;AACJ,SARgB,CAAjB;AASAjB,QAAAA,KAAK,CAAC+B,IAAN,CAAW,gBAAX,EAA6B,KAAK5B,KAAL,CAAWI,QAAxC,EACCyB,IADD,CACMC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADlB,EAECG,KAFD,CAEOC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAFhB;AAIA,eAAO;AACH9B,UAAAA;AADG,SAAP;AAGH,OAjBD;AAkBH,KA7E6B;;AAAA,SA+E9B+B,SA/E8B,GA+ElB,YAAW;AAEnB,WAAKvB,QAAL,CAAc;AAACwB,QAAAA,UAAU,EAAE;AAAb,OAAd;AACA,YAAMN,QAAQ,GAAG,MAAMjC,KAAK,CAAC,gBAAD,CAA5B;AAEA,UAAGiC,QAAQ,CAACO,MAAT,KAAoB,GAAvB,EAA4B,MAAMC,KAAK,CAACR,QAAQ,CAACS,OAAV,CAAX;AAE5B,WAAK3B,QAAL,CAAc;AACVT,QAAAA,eAAe,EAAE2B,QAAQ,CAACU,IADhB;AAEVpC,QAAAA,QAAQ,EAAE0B,QAAQ,CAACU,IAFT;AAGVnC,QAAAA,gBAAgB,EAAEyB,QAAQ,CAACU,IAAT,CAAc,CAAd,CAHR;AAIVvC,QAAAA,gBAAgB,EAAE;AAJR,OAAd;AAMA,aAAO6B,QAAQ,CAACU,IAAhB;AACH,KA7F6B;;AAAA,SA8F9BC,SA9F8B,GA8FlB,YAAW;AACnB,WAAK7B,QAAL,CAAc;AAACwB,QAAAA,UAAU,EAAE;AAAb,OAAd;AACA,YAAMN,QAAQ,GAAG,MAAMjC,KAAK,CAAC,YAAD,CAA5B;AAEA,UAAGiC,QAAQ,CAACO,MAAT,KAAoB,GAAvB,EAA4B,MAAMC,KAAK,CAACR,QAAQ,CAACS,OAAV,CAAX;AAC5B,WAAK3B,QAAL,CAAc;AACVN,QAAAA,eAAe,EAAEwB,QAAQ,CAACU,IADhB;AAEVjC,QAAAA,MAAM,EAAEuB,QAAQ,CAACU,IAFP;AAGVtC,QAAAA,gBAAgB,EAAE;AAHR,OAAd;AAKA,aAAO4B,QAAQ,CAACU,IAAhB;AACH,KAzG6B;AAAA;;AAyC9BE,EAAAA,iBAAiB,GAAG;AAEjB,SAAKP,SAAL;AACA,SAAKM,SAAL;AACA,SAAKE,KAAL,GAAaC,WAAW,CAAC,MAAM,KAAKT,SAAL,EAAP,EAAyB,KAAzB,CAAxB;AAEF;;AAEDU,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACA,SAAKA,KAAL,GAAa,IAAb;AACH;;AAuDDI,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKhD,KAAL,CAAWE,gBAA7B;AACA,UAAM+C,SAAS,GAAG,KAAKjD,KAAL,CAAWC,gBAA7B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,aAAa,EAAE,KAAKO,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR,EAIQ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAACyC,SAAD,IAAc,CAACD,SAAf,GACG,oBAAC,SAAD;AACI,MAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWG,eADvB;AAEI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWM,eAFvB;AAGI,MAAA,eAAe,EAAE,KAAKgB,eAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAOO;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,CARR,CAJR,EAiBQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC2B,SAAD,IAAc,CAACD,SAAf,GACG,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWK,gBADtB;AAEI,MAAA,cAAc,EAAE,KAAKkB,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAKO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CAjBR,CADJ;AA6BH;;AA5I6B;;AA+IlC,eAAezB,GAAf","sourcesContent":["import React from 'react';\nimport './app.css';\nimport SearchBar from './SearchBar';\nimport TableList from './TableList';\nimport GuestView from './GuestView';\n//import Guests from '../data/guest_list.json'\n//import Tables from '../data/tables.json'\nimport axios from 'axios'\n\nclass App extends React.Component {\n    \n    state = {isFetchingGuests: true, isFetchingTables: true, guestsToDisplay: [], myGuests: [], selectectedGuest: null, tablesToDisplay: [], tables: []};\n\n    onWordEntered = (word) => {\n\n        const wordLower = word.toLowerCase();\n        this.setState({guestsToDisplay: [], tablesToDisplay: []});\n        if(word === \"\") {\n            this.setState({guestsToDisplay: this.state.myGuests, tablesToDisplay: this.state.tables});\n        } else {\n            this.setState(state => {\n                const guestsToDisplay = state.myGuests.map(g => {\n                    if(g.CODE.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    if(g.Names.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    if(g.Table.toLowerCase().indexOf(wordLower) > -1) {\n                        return g;\n                    }\n                    return {};\n                });\n\n                const tablesToDisplay = this.state.tables.map( table => {\n                    for(let guest of guestsToDisplay) {\n                        if(guest.Table === table.Name) {\n                            return table;\n                        }\n                    }\n                    return null;\n                });\n                return {\n                    guestsToDisplay,\n                    tablesToDisplay\n                };\n            });\n        }\n    }\n\n    componentDidMount() {\n\n       this.getGuests();\n       this.getTables();\n       this.timer = setInterval(() => this.getGuests(), 60000);\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n\n    onGuestSelected = (guest) => {\n        this.setState({selectectedGuest: guest});  \n    }\n\n    onArrivalCheck = (guest) => {\n        this.setState(state => {\n            const myGuests = state.myGuests.map(g => {\n                if(g.CODE === guest.CODE){\n                    const currTime = new Date().toLocaleTimeString();\n                    g.Present = currTime;\n                    return g;\n                }else {\n                    return g;\n                }\n            });\n            axios.post('api/postGuests', this.state.myGuests)\n            .then(response => console.log(response))\n            .catch(error => console.log(error));\n            \n            return {\n                myGuests,\n            };\n        });\n    }\n\n    getGuests = async() => {\n\n        this.setState({isFetching: true});\n        const response = await axios('api/guest_list');\n\n        if(response.status !== 200) throw Error(response.message);\n\n        this.setState({\n            guestsToDisplay: response.data,\n            myGuests: response.data,\n            selectectedGuest: response.data[1],\n            isFetchingGuests: false\n        });\n        return response.data;\n    }\n    getTables = async() => {\n        this.setState({isFetching: true});\n        const response = await axios('api/tables');\n\n        if(response.status !== 200) throw Error(response.message);\n        this.setState({\n            tablesToDisplay: response.data, \n            tables: response.data,\n            isFetchingTables: false\n        });\n        return response.data;\n    }\n\n    render() {\n        const isFTables = this.state.isFetchingTables;\n        const isFGuests = this.state.isFetchingGuests;\n\n        return (\n            <div>\n                    <div>\n                        <SearchBar onWordEntered={this.onWordEntered} />\n                    </div>\n                    <div className=\"ui segment tables\" >\n                    {!isFGuests && !isFTables ? (\n                        <TableList \n                            guests={this.state.guestsToDisplay} \n                            tables={this.state.tablesToDisplay} \n                            onGuestSelected={this.onGuestSelected}\n                        />\n                        ) : (\n                            <div className=\"ui active inverted dimmer\">\n                                <div className=\"ui large text loader\">Téléchargement des invités</div>\n                            </div>\n                     )}\n                    </div>\n                    <div className=\"ui segment\">\n                    {!isFGuests && !isFTables ? (\n                        <GuestView \n                            guest={this.state.selectectedGuest} \n                            onArrivalCheck={this.onArrivalCheck} \n                        />\n                        ) : <div></div> }\n                    </div> \n                    \n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}